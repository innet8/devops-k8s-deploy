apiVersion: batch/v1
kind: Job
metadata:
  name: dootask-init-job
spec:
  ttlSecondsAfterFinished: 60
  template:
    spec:
      initContainers:
      - name: wait-for-mysql
        image: mysql:8.0
        command: ['sh', '-c']
        args:
          - |
            echo "Waiting for MySQL to be ready..."
            until mysql -h $DB_HOST -u$DB_USERNAME -p$DB_PASSWORD -e "SELECT 1" >/dev/null 2>&1; do
              echo "MySQL is unavailable - sleeping"
              sleep 2
            done
            
            # 尝试创建数据库
            mysql -h $DB_HOST -u$DB_USERNAME -p$DB_PASSWORD -e "CREATE DATABASE IF NOT EXISTS $DB_DATABASE CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;"
            
            echo "MySQL is up and ready!"
        env:
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: dootask-secret
              key: DB_HOST
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: dootask-secret
              key: DB_USERNAME
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: dootask-secret
              key: DB_PASSWORD
        - name: DB_DATABASE
          valueFrom:
            secretKeyRef:
              name: dootask-secret
              key: DB_DATABASE
      containers:
      - name: init
        image: kuaifan/php:swoole-8.0.rc18
        command: ["/bin/sh", "-c"]
        args:
          - |
            cd /app
            if [ ! -d "/app/dootask/.git" ]; then
                git clone -b v0.47.7 --depth=1 https://github.com/kuaifan/dootask.git 
                cd dootask
                if [ ! -f "vendor/autoload.php" ]; then
                    composer config repo.packagist composer https://packagist.phpcomposer.com
                    composer install
                    composer config --unset repos.packagist
                fi
                php artisan migrate --seed --force
                if [ "$?" != "0" ]; then
                  sleep 10
                  php artisan migrate --seed --force
                fi
            else
                cd dootask
                git fetch --all
                git reset --hard origin/$(git branch | sed -n -e 's/^\* \(.*\)/\1/p')
                git pull
                composer update
                php artisan migrate --force
            fi
            sed -i "s/DB_PASSWORD/ZINCSEARCH_PASSWORD/" app/Module/ZincSearch/ZincSearchBase.php 2>&1
            sed -i "s/'dialogMsg';/'dialogMsg_$APP_ID';/" app/Module/ZincSearch/ZincSearchDialogMsg.php 2>&1
            sed -i "s/'dialogUser';/'dialogUser_$APP_ID';/" app/Module/ZincSearch/ZincSearchDialogMsg.php 2>&1
            sed -i "s/'keyValue';/'keyValue_$APP_ID';/" app/Module/ZincSearch/ZincSearchKeyValue.php 2>&1
            mkdir -p /app/supervisor/conf.d
            mkdir -p /app/php
            
            cp docker/crontab/crontab.conf /app/supervisor/conf.d/
            cp docker/php/php.conf /app/supervisor/conf.d/
            cp docker/php/php.ini /app/php/

            echo "Preparation completed successfully" >/app/success
        env:
        - name: COMPOSER_ALLOW_SUPERUSER
          value: "1"
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: dootask-secret
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: dootask-secret
              key: DB_PORT
        - name: DB_DATABASE
          valueFrom:
            secretKeyRef:
              name: dootask-secret
              key: DB_DATABASE
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: dootask-secret
              key: DB_USERNAME
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: dootask-secret
              key: DB_PASSWORD
        - name: DB_PREFIX
          valueFrom:
            secretKeyRef:
              name: dootask-secret
              key: DB_PREFIX
        - name: APP_ID
          valueFrom:
            secretKeyRef:
              name: dootask-secret
              key: APP_ID
        volumeMounts:
        - name: app-data
          mountPath: /app
      
      volumes:
      - name: app-data
        persistentVolumeClaim:
          claimName: dootask-app-pvc
      restartPolicy: OnFailure

