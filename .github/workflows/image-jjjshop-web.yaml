name: Build jjjshop-web image

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  workflow_dispatch:
    inputs:
      bgbranch: 
        description: '分支'
        required: true
        default: 'saas-v1.1.1'
      # branch: 
      #   description: '前端分支'
      #   required: true
      #   default: '1.1.1'

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: hub.hitosea.com
  # github.repository as <account>/<repo>
  IMAGE_NAME: ttpos-web/jjjshop-web
  PROJECT: jjjshop-saas
  jjjshop_url: innet8/jjjshop
  jjjshop_path: jjjshop-git
  #收银端
  cashier_url: innet8/cash-register-system
  cashier_path: cashier-git
  #厨显端
  kitchen_url: innet8/KitchenDisplay
  kitchen_path: kitchen-git
  #平板端
  tablet_url: innet8/flat-panel-side
  tablet_path: tablet-git
  #扫码
  scan_url: innet8/Cashier-Scan-H5
  scan_path: scan-git
  #点餐助手
  assistant_url: innet8/Cashier-System-Helper
  assistant_path: assistant-git
  # 电子菜单
  menu_url: innet8/Cashier-Scan-menu
  menu_path: menu-git

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Checkout the jjjshop code
        uses: actions/checkout@v4
        with:
          path: ${{ env.jjjshop_path }}
          repository: ${{ env.jjjshop_url }} # 目标仓库的 owner 和名称
          token: ${{ secrets.OTHER_REPO_TOKEN }} # 使用存储在 secrets 中的 token
          ref: ${{ github.event.inputs.bgbranch }} # 可选：指定要检出的分支或 tag，默认为 default branch

      # - name: Checkout the cashier code
      #   uses: actions/checkout@v4
      #   with:
      #     path: ${{ env.cashier_path }}
      #     repository: ${{ env.cashier_url }} # 目标仓库的 owner 和名称
      #     token: ${{ secrets.OTHER_REPO_TOKEN }} # 使用存储在 secrets 中的 token
      #     ref: ${{ github.event.inputs.branch }} # 可选：指定要检出的分支或 tag，默认为 default branch

      # - name: Checkout the kitchen code
      #   uses: actions/checkout@v4
      #   with:
      #     path: ${{ env.kitchen_path }}
      #     repository: ${{ env.kitchen_url }} # 目标仓库的 owner 和名称
      #     token: ${{ secrets.OTHER_REPO_TOKEN }} # 使用存储在 secrets 中的 token
      #     ref: ${{ github.event.inputs.branch }} # 可选：指定要检出的分支或 tag，默认为 default branch

      # - name: Checkout the tablet code
      #   uses: actions/checkout@v4
      #   with:
      #     path: ${{ env.tablet_path }}
      #     repository: ${{ env.tablet_url }} # 目标仓库的 owner 和名称
      #     token: ${{ secrets.OTHER_REPO_TOKEN }} # 使用存储在 secrets 中的 token
      #     ref: ${{ github.event.inputs.branch }} # 可选：指定要检出的分支或 tag，默认为 default branch

      # - name: Checkout the scan code
      #   uses: actions/checkout@v4
      #   with:
      #     path: ${{ env.scan_path }}
      #     repository: ${{ env.scan_url }} # 目标仓库的 owner 和名称
      #     token: ${{ secrets.OTHER_REPO_TOKEN }} # 使用存储在 secrets 中的 token
      #     ref: ${{ github.event.inputs.branch }} # 可选：指定要检出的分支或 tag，默认为 default branch

      # - name: Checkout the assistant code
      #   uses: actions/checkout@v4
      #   with:
      #     path: ${{ env.assistant_path }}
      #     repository: ${{ env.assistant_url }} # 目标仓库的 owner 和名称
      #     token: ${{ secrets.OTHER_REPO_TOKEN }} # 使用存储在 secrets 中的 token
      #     ref: ${{ github.event.inputs.branch }} # 可选：指定要检出的分支或 tag，默认为 default branch

      # - name: Checkout the menu code
      #   uses: actions/checkout@v4
      #   with:
      #     path: ${{ env.menu_path }}
      #     repository: ${{ env.menu_url }} # 目标仓库的 owner 和名称
      #     token: ${{ secrets.OTHER_REPO_TOKEN }} # 使用存储在 secrets 中的 token
      #     ref: ${{ github.event.inputs.branch }} # 可选：指定要检出的分支或 tag，默认为 default branch
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Copy dockerfile
        run: |
          cp ${{ env.PROJECT }}/Dockerfile.web ${{ env.jjjshop_path }}/Dockerfile
          cd ${{ env.jjjshop_path }}
          echo "COMMIT_ID=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      # - name: Start web build
      #   run: |
      #     pushd ${{ env.jjjshop_path }}/jjj_food_chain_admin
      #     pnpm install
      #     pnpm run build
      #     popd
      #     rm -rf ${{ env.jjjshop_path }}/jjj_food_chain/public/admin 
      #     cp -r ${{ env.jjjshop_path }}/jjj_food_chain_admin/admin ${{ env.jjjshop_path }}/jjj_food_chain/public/admin

      #     pushd ${{ env.jjjshop_path }}/jjj_food_chain_shop
      #     pnpm install
      #     pnpm run build
      #     popd
      #     rm -rf ${{ env.jjjshop_path }}/jjj_food_chain/public/shop 
      #     cp -r ${{ env.jjjshop_path }}/jjj_food_chain_shop/dist ${{ env.jjjshop_path }}/jjj_food_chain/public/shop

      #     pushd ${{ env.cashier_path }}
      #     pnpm install
      #     pnpm run build:h5
      #     popd
      #     rm -rf ${{ env.jjjshop_path }}/jjj_food_chain/public/cashier 
      #     cp -r ${{ env.cashier_path }}/dist/build/h5 ${{ env.jjjshop_path }}/jjj_food_chain/public/cashier

      #     pushd ${{ env.kitchen_path }}
      #     pnpm install
      #     pnpm run build:h5
      #     popd
      #     rm -rf ${{ env.jjjshop_path }}/jjj_food_chain/public/kitchen 
      #     cp -r ${{ env.kitchen_path }}/dist/build/h5 ${{ env.jjjshop_path }}/jjj_food_chain/public/kitchen

      #     pushd ${{ env.tablet_path }}
      #     pnpm install
      #     pnpm run build:h5
      #     popd
      #     rm -rf ${{ env.jjjshop_path }}/jjj_food_chain/public/tablet 
      #     cp -r ${{ env.tablet_path }}/dist/build/h5 ${{ env.jjjshop_path }}/jjj_food_chain/public/tablet

      #     pushd ${{ env.scan_path }}
      #     pnpm install
      #     pnpm run build
      #     popd
      #     rm -rf ${{ env.jjjshop_path }}/jjj_food_chain/public/scan 
      #     cp -r ${{ env.scan_path }}/dist/build/h5 ${{ env.jjjshop_path }}/jjj_food_chain/public/scan

      #     pushd ${{ env.assistant_path }}
      #     pnpm install
      #     pnpm run build
      #     popd
      #     rm -rf ${{ env.jjjshop_path }}/jjj_food_chain/public/assistant 
      #     cp -r ${{ env.assistant_path }}/dist/build/h5 ${{ env.jjjshop_path }}/jjj_food_chain/public/assistant

      #     pushd ${{ env.menu_path }}
      #     pnpm install
      #     pnpm run build
      #     popd
      #     rm -rf ${{ env.jjjshop_path }}/jjj_food_chain/public/menu 
      #     cp -r ${{ env.menu_path }}/dist/build/h5 ${{ env.jjjshop_path }}/jjj_food_chain/public/menu

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 #v3.5.0
        with:
          cosign-release: 'v2.2.4'

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: devops
          password: ${{ secrets.DOCKERPASSWD }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,value=${{ steps.config.outputs.COMMIT_ID }},prefix=${{ github.event.inputs.branch }}-,suffix=,format=short  
      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: ${{ env.SRC_PATH }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # 更新 k8s 分支的 deploy.yaml 文件
      # - name: Checkout k8s branch
      #   uses: actions/checkout@v4
      #   with:
      #     ref: k8s  # 检出 k8s 分支

      # - name: Update deploy.yaml
      #   run: |
      #     # 获取构建的镜像标签
      #     IMAGE_TAG=${{ steps.meta.outputs.tags }}
      #     echo "IMAGE_TAG=$IMAGE_TAG"
      #     # 更新 deploy.yaml 文件中的镜像标签
      #     sed -i "s|image:.*|image: $IMAGE_TAG|" ${{ env.PROJECT }}/deploy/web-deployment.yaml

      # - name: Commit and push changes 
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 使用默认的 GITHUB_TOKEN
      #   run: |
      #     git config --global user.name "github-actions[bot]"
      #     git config --global user.email "github-actions[bot]@users.noreply.github.com"
      #     git add ${{ env.PROJECT }}/deploy/web-deployment.yaml
      #     git commit -m "Automated update of .yaml with new image tag: ${{ steps.meta.outputs.tags }}"
      #     git push origin HEAD:main
