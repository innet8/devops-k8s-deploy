name: Build wuling image

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  workflow_dispatch:
    inputs:
      branch: 
        description: 'branch (e.g., release)'
        required: true
        default: 'master'


env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: hub.hitosea.com
  # github.repository as <account>/<repo>
  IMAGE_NAME: official-website/wuling
  PROJECT: wuling
  URL: innet8/wuling
  SRC_PATH: wuling-git

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Checkout the code
        uses: actions/checkout@v4
        with:
          path: ${{ env.SRC_PATH }}
          repository: ${{ env.URL }} # 目标仓库的 owner 和名称
          token: ${{ secrets.OTHER_REPO_TOKEN }} # 使用存储在 secrets 中的 token
          ref: ${{ github.event.inputs.branch }} # 可选：指定要检出的分支或 tag，默认为 default branch

      - name: Copy Dockerfile to B repository
        run: |
          cp ${{ env.PROJECT }}/Dockerfile ${{ env.SRC_PATH }}/Dockerfile
          cd ${{ env.SRC_PATH }}
          echo "COMMIT_ID=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 #v3.5.0
        with:
          cosign-release: 'v2.2.4'

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: devops
          password: ${{ secrets.DOCKERPASSWD }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,value=${{ steps.config.outputs.COMMIT_ID }},prefix=${{ github.event.inputs.branch }}-,suffix=,format=short  
      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: ${{ env.SRC_PATH }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # 更新 k8s 分支的 deploy.yaml 文件
      # - name: Checkout k8s branch
      #   uses: actions/checkout@v4
      #   with:
      #     ref: k8s  # 检出 k8s 分支

      - name: Update deploy.yaml
        run: |
          # 获取构建的镜像标签
          IMAGE_TAG=${{ steps.meta.outputs.tags }}
          echo "IMAGE_TAG=$IMAGE_TAG"
          # 更新 deploy.yaml 文件中的镜像标签
          sed -i "s|image:.*|image: $IMAGE_TAG|" ${{ env.PROJECT }}/deploy/wuling-web.yaml

      - name: Commit and push changes 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 使用默认的 GITHUB_TOKEN
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git ${{ env.PROJECT }}/deploy/wuling-web.yaml
          git commit -m "Automated update of deploy.yaml with new image tag: ${{ steps.meta.outputs.tags }}"
          git push origin HEAD:main